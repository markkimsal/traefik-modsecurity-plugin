# Nginx configuration for both HTTP and SSL

server_tokens ${SERVER_TOKENS};

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen ${PORT} default_server;

    server_name ${SERVER_NAME};
    set $always_redirect ${NGINX_ALWAYS_TLS_REDIRECT};

    PROXY_SSL_CONFIG
	error_log /dev/fd/2 debug;
	access_log /dev/fd/1;

    location / {
        client_max_body_size 0;

        if ($always_redirect = on) {
            return 301 https://$host$request_uri;
        }

        include includes/cors.conf;

		#return 200;

        root /etc/nginx;
		try_files /nginx.conf =404;

        #root /var/www/html;
        #index index.html index.htm README.md;
		#try_files /README.md /default.conf.template =409;
    }

    include includes/location_common.conf;

}

# must keep SSL for nginx
server {
    listen ${SSL_PORT} ssl;

    server_name ${SERVER_NAME};

    ssl_certificate ${SSL_CERT_FILE};
    ssl_certificate_key ${SSL_CERT_KEY_FILE};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-${SSL_DH_BITS}.pem;

    ssl_protocols ${SSL_PROTOCOLS};
    ssl_ciphers ${SSL_CIPHERS};
    ssl_prefer_server_ciphers ${SSL_PREFER_CIPHERS};

    ssl_stapling ${SSL_OCSP_STAPLING};
    ssl_stapling_verify ${SSL_OCSP_STAPLING};

    ssl_verify_client ${SSL_VERIFY};
    ssl_verify_depth ${SSL_VERIFY_DEPTH};

    PROXY_SSL_CONFIG

    location / {
        client_max_body_size 0;

        include includes/cors.conf;

        root /etc/nginx;
        try_files /nginx.conf =404;
    }

    include includes/location_common.conf;
}
